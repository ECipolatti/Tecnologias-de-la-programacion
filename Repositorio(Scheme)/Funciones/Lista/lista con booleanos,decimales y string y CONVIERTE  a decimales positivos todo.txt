(define conv-datos
  (letrec (( todec
        (lambda (x)
          (if (null? x)
              '()
               (cons (abs(car x)) (todec (cdr x)))
          )
    )
   ))
    
   (letrec (( textodec
             (lambda (y)
               (if (null? y)
                   '()
                   (cons (string->number(car y)) (textodec (cdr y)))
             )
             )
            ))
     
   (letrec ((booltodec
             (lambda (z)
               (if (null? z)
                   '()
                    (if (eqv? (car z) "V")
                        (cons 1 (booltodec (cdr z)))
                        (cons 0 (booltodec (cdr z)))
                )
               )
               )
             ))
     (lambda (r)
       (if (null? r)
           '()
           (if (eqv? (car(car r)) "D")
               (cons (todec (car(cdr(car r))))(conv-datos (cdr r)))
               (if (eqv? (car(car r)) "T")
                   (cons (textodec (car (cdr (car r)))) (conv-datos (cdr r)))
                   (if (eqv?(car (car r)) "B")
                       (cons (booltodec(car (cdr (car r))))(conv-datos (cdr r)))
                       )
                   )
               )
           )
       )
     )
     )
    )
  )
  
(conv-datos '(("D" (1 2 -3 4 -5))("T" ("6" "7" "8"))("B" ("V" "F"))))
