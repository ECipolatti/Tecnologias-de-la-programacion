------------------------------------------------------------------------------
SORT
------------------------------------------------------------------------------


insert_sort(List,Sorted):-i_sort(List,[],Sorted).


i_sort([],Acc,Acc).

i_sort([H|T],Acc,Sorted):-insert(H,Acc,NAcc),i_sort(T,NAcc,Sorted).
   

insert(X,[Y|T],[Y|NT]):-X>Y,insert(X,T,NT).

insert(X,[Y|T],[X,Y|T]):-X=<Y.
insert(X,[],[X]).




------------------------------------------------------------------------------
DELETE
------------------------------------------------------------------------------


borrar(_,[],[]):-!. 

borrar(X,[X|L1],L2):-!,borrar(X,L1,L2).          

borrar(X,[Y|L1],[Y|L2]):-borrar(X,L1,L2). 



% BORRA LOS REPETIDOS (NO DEJA NINGUNO)




------------------------------------------------------------------------------
APPEND 
------------------------------------------------------------------------------



concatenar([],L,L):-!.

concatenar([X|L1],L2,[X|L3]):-concatenar(L1,L2,L3).




------------------------------------------------------------------------------
MEMBER 
------------------------------------------------------------------------------




pertenece(X,[X|_]):-!.
pertenece(X,[_|C]):-pertenece(X,C).




------------------------------------------------------------------------------
CONJUNTO
------------------------------------------------------------------------------


conjunto([],[]):-!.

conjunto([X|L1],C):-borrar(X,L1,Resto),conjunto(Resto,C2),concatenar([X],C2,C).
		


% Lista sin numeros repetidos




------------------------------------------------------------------------------
PERMUTACIONES
 -------------------------------------------------------------------------



separar(X,[X|L],L).

separar(X,[Y|Z],[Y|R]):-separar(X,Z,R).


permutaciones([],[]).

permutaciones(L,[X|R]):-separar(X,L,Lresto),permutaciones(Lresto,R).




---------------------------------------------------------------
SUBLISTAS (POSIBLES DIVISIONES DE LISTAS)
-----------------------------------------------------------



sublistas([X],L,[X|L]).

sublistas([X|L1],L2,[X|L3]):-sublistas(L1,L2,L3), L2 \= [].




------------------------------------------------------------------------------
FLATTEN
 ------------------------------------------------------------------------------


aplanar([],[]).

aplanar([[X|L1]|L2],L):-aplanar([X|L1],A1),aplanar(L2,A2),append(A1,A2,L).

aplanar([[]|L1],L):-aplanar(L1,L).

aplanar([X|L1],[X|L]):-aplanar(L1,L).




------------------------------------------------------------------------------
LENGTH
------------------------------------------------------------------------------


longitud([],0).

longitud([_|C],L):-longitud(C,L1),L is L1+1.




-----------------------------------------------------------
REVERSE (Invertir elementos de la lista)
 -----------------------------------------------------------------


inversa_1([],[]).

inversa_1([X|L1],L2):-inversa_1(L1,L3),append(L3,[X],L2).




----------------------------------------------------------
MSORT (Ordena dejando los repetidos)
 --------------------------------------------------------------------


merge([], L, L).

merge(L, [], L).

merge([X|Xs], [Y|Ys], [X|Zs])
:- X =< Y, merge(Xs, [Y|Ys], Zs).

merge([X|Xs], [Y|Ys], [Y|Zs]):- X > Y,
 merge([X|Xs], Ys, Zs).


split([], [], []).

split([X|Xs], [X|L2], L1)
  :- split(Xs, L1, L2).



msort1([], []).

msort1([X], [X]).
msort1(L, Ls):- split(L, L1, L2),
 msort1(L1, L1s), msort1(L2, L2s), merge(L1s, L2s, Ls).

